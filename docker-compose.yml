services:
  postgres:
    image: postgres:17.2
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      POSTGRES_DB: ${POSTGRES_DB:-nextcloud}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER:-admin}" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend
    ports:
      - "127.0.0.1:${POSTGRES_LOOPBACK_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:8.14
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--spider", "localhost:80" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - frontend
      - backend
    ports:
      - "127.0.0.1:${PGADMIN_LOOPBACK_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json

  redis:
    image: redis:7.4.1
    restart: always
    command: [ "redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD:-password}" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend
    ports:
      - "127.0.0.1:${REDIS_LOOPBACK_PORT:-6379}:6379"
    volumes:
      - redis_data:/data

  nextcloud:
    image: nextcloud:30.0.4
    hostname: ${NEXTCLOUD_HOSTNAME:-localhost}
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER:-admin}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD:-admin}
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_TRUSTED_DOMAINS:-localhost}
      OVERWRITEPROTOCOL: ${NEXTCLOUD_OVERWRITEPROTOCOL:-https}
      POSTGRES_HOST: ${NEXTCLOUD_POSTGRES_HOST:-postgres}:${NEXTCLOUD_POSTGRES_PORT:-5432}
      POSTGRES_USER: ${NEXTCLOUD_POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${NEXTCLOUD_POSTGRES_PASSWORD:-admin}
      POSTGRES_DB: ${NEXTCLOUD_POSTGRES_DB:-nextcloud}
      REDIS_HOST: ${NEXTCLOUD_REDIS_HOST:-redis}
      REDIS_HOST_PORT: ${NEXTCLOUD_REDIS_PORT:-6379}
      REDIS_HOST_PASSWORD: ${NEXTCLOUD_REDIS_PASSWORD:-password}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - frontend
      - backend
    ports:
      - "127.0.0.1:${NEXTCLOUD_LOOPBACK_PORT:-8080}:80"
    volumes:
      - nextcloud_data:/var/www/html
      - ./nextcloud/wait-for-it.sh:/usr/local/bin/wait-for-it.sh
      - ./nextcloud/hooks:/docker-entrypoint-hooks.d

  backup:
    image: ghcr.io/borgmatic-collective/borgmatic:1.9.4
    restart: always
    environment:
      TZ: ${BORGMATIC_TZ}
      BORG_RSH: "ssh -i ${BORGMATIC_SSH_KEY_PATH} -o StrictHostKeyChecking=no"
      BORG_REPO: ${BORGMATIC_BORG_REPO}
      BORG_PASSPHRASE: ${BORGMATIC_BORG_PASSPHRASE}
      BORG_HEALTHCHECK_URL: ${BORGMATIC_BORG_HEALTHCHECK_URL}
    volumes:
      - postgres_data:/mnt/source/postgres:ro
      - redis_data:/mnt/source/redis:ro
      - nextcloud_data:/mnt/source/nextcloud:ro
      - nginx_logs:/mnt/source/nginx:ro
      - cron_logs:/mnt/source/cron:ro
      - ./backup/borgmatic.d:/etc/borgmatic.d
      - ./backup/.config/borg:/root/.config/borg
      - ./backup/.ssh:/root/.ssh
      - ./backup/.cache/borg:/root/.cache/borg
      - ./backup/.state/borgmatic:/root/.local/state/borgmatic

  cron:
    build:
      context: cron
      dockerfile: Dockerfile
    restart: always
    depends_on:
      nextcloud:
        condition: service_healthy
      backup:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "pgrep", "cron" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend
    volumes:
      - nextcloud_data:/var/www/html
      - cron_logs:/var/log

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
  nextcloud_data:
  cron_logs:
  nginx_logs:

networks:
  frontend:
  backend:
